# This workflow can be called to add a given issue to a github org-level Project
name: Add newly created issues to an org Github Project
on:
  # This action is meant to be used from other actions.
  # https://docs.github.com/en/actions/learn-github-actions/reusing-workflows
  workflow_call:
    secrets:
      GITHUB_APP_ID:
        required: true
      GITHUB_APP_PRIVATE_KEY:
        required: true
    inputs:
      ORGANIZATION:
        type: "string"
        default: "openedx"
      PROJECT_NUMBER:
        type: "number"
        required: true


jobs:
  # Add the ticket to a board
  add_to_project:
    runs-on: ubuntu-latest
    steps:
      # Generate a token from org-level GitHub App because non-classic projects
      # are defined at the org level
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.GITHUB_APP_ID }}
          private_key: ${{ secrets.GITHUB_APP_PRIVATE_KEY }}

      - name: Get project ID
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ORGANIZATION: ${{ inputs.ORGANIZATION }}
          PROJECT_NUMBER: ${{ inputs.PROJECT_NUMBER }}
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectV2(number: $number) {
                  id
                }
              }
            }' -f org=$ORGANIZATION -F number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.organization.projectV2.id' project_data.json) >> $GITHUB_ENV

      - name: Add issue to project
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          ISSUE_ID: ${{ github.event.issue.node_id }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation($project:ID!, $issue:ID!) {
              addProjectV2ItemById(input: {projectId: $project, contentId: $issue}) {
                item {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f issue=$ISSUE_ID --jq '.data.addProjectV2ItemById.item.id')"
